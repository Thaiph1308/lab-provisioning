
name=postgres-connector-dbz
connector.class=io.debezium.connector.postgresql.PostgresConnector
# plugin.name=pgoutput
slot.name=debezium
publication.name=dbz_publication
# publication.autocreate.mode=filtered

value.converter.schema.registry.url=http://schemaregistry:8081
key.converter.schema.registry.url=http://schemaregistry:8081
key.converter=io.confluent.connect.avro.AvroConverter
value.converter=io.confluent.connect.avro.AvroConverter

event.processing.failure.handling.mode=fail

tasks.max=1
topic.prefix=pg
topic.creation.enable = true
topic.creation.default.replication.factor = 1
topic.creation.default.partitions = 1
topic.creation.default.min.insync.replicas = 1

tombstones.on.delete=false

# postgres IP
database.hostname=10.43.226.249
database.port=5432
database.user=cdc_user
database.password=cdc
database.dbname=postgres
# table.include.list=public[.](pg_signal|pg_date)
# table.include.list=public[.](pg_date|pg_number)
table.include.list=public[.](pg_date)

snapshot.mode=initial
snapshot.max.threads=3

heartbeat.interval.ms=60000

topic.transaction=transaction
provide.transaction.metadata=true

signal.enabled.channels=source
signal.data.collection=public.pg_signal

notification.enabled.channels=sink
notification.sink.topic.name=pg_sink_noti

time.precision.mode=connect
decimal.handling.mode=precise
hstore.handling.mode=json
dhstore.handling.mode=json
binary.handling.mode=base64

column.propagate.source.type=.*
datatype.propagate.source.type=.*


transforms=RegexR
transforms.RegexR.type=org.apache.kafka.connect.transforms.RegexRouter
transforms.RegexR.regex=pg[.](.+)[.](.+)
transforms.RegexR.replacement=pg_$1_$2
